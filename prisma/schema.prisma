generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("POSTGRES_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model address {
  id        Int        @id @default(autoincrement())
  address1  String     @db.VarChar
  address2  String?    @db.VarChar
  city      String     @db.VarChar
  country   String     @db.VarChar
  state     String     @db.VarChar
  createdAt DateTime   @default(now()) @db.Timestamp(6)
  updatedAt DateTime   @default(now()) @db.Timestamp(6)
  deletedAt DateTime?  @db.Timestamp(6)
  agency    agency[]
  wishcard  wishcard[]
}

model agency {
  id           Int            @id @default(autoincrement())
  name         String         @db.VarChar
  bio          String?        @db.VarChar
  isVerified   Boolean?       @default(false)
  phone        String?        @db.VarChar
  website      String?        @db.VarChar
  createdBy    Int
  addressId    Int
  createdAt    DateTime       @default(now()) @db.Timestamp(6)
  updatedAt    DateTime       @default(now()) @db.Timestamp(6)
  deletedAt    DateTime?      @db.Timestamp(6)
  address      address        @relation(fields: [addressId], references: [id])
  user         user           @relation(fields: [createdBy], references: [id])
  agencyMember agencyMember[]
  wishcard     wishcard[]
}

model agencyMember {
  userId     Int
  agencyId   Int
  agencyRole agency_roles? @default(MEMBER)
  createdAt  DateTime      @default(now()) @db.Timestamp(6)
  updatedAt  DateTime      @default(now()) @db.Timestamp(6)
  deletedAt  DateTime?     @db.Timestamp(6)
  agency     agency        @relation(fields: [agencyId], references: [id])
  user       user          @relation(fields: [userId], references: [id])

  @@id([userId, agencyId])
}

model animal {
  id        Int          @id @default(autoincrement())
  name      String       @db.VarChar
  gender    gender       @default(OTHER)
  type      animal_type?
  breed     String?      @db.VarChar
  age       Int?
  bio       String?      @db.VarChar
  createdAt DateTime     @default(now()) @db.Timestamp(6)
  updatedAt DateTime     @default(now()) @db.Timestamp(6)
  deletedAt DateTime?    @db.Timestamp(6)
  wishcard  wishcard[]
}

model child {
  id        Int        @id @default(autoincrement())
  birthday  DateTime?  @db.Date
  gender    gender?
  firstName String     @db.VarChar
  lastName  String?    @db.VarChar
  interest  String?    @db.VarChar
  bio       String?    @db.VarChar
  createdAt DateTime   @default(now()) @db.Timestamp(6)
  updatedAt DateTime   @default(now()) @db.Timestamp(6)
  deletedAt DateTime?  @db.Timestamp(6)
  wishcard  wishcard[]
}

model donation {
  id            Int             @id @default(autoincrement())
  wishcardId    Int
  userId        Int
  donationPrice Float
  status        donation_status @default(DONATED)
  createdAt     DateTime        @default(now()) @db.Timestamp(6)
  updatedAt     DateTime        @default(now()) @db.Timestamp(6)
  deletedAt     DateTime?       @db.Timestamp(6)
  user          user            @relation(fields: [userId], references: [id])
  wishcard      wishcard        @relation(fields: [wishcardId], references: [id])

  @@index([userId], name: "donation_userId_idx")
  @@index([wishcardId], name: "donation_wishcardId_idx")
}

model images {
  id             Int       @id @default(autoincrement())
  wishcardId     Int
  path           String    @db.VarChar
  isPrimaryImage Boolean?  @default(false)
  createdAt      DateTime  @default(now()) @db.Timestamp(6)
  updatedAt      DateTime  @default(now()) @db.Timestamp(6)
  deletedAt      DateTime? @db.Timestamp(6)
  wishcard       wishcard  @relation(fields: [wishcardId], references: [id])

  @@index([wishcardId], name: "images_wishcardId_idx")
}

model message {
  id         Int       @id @default(autoincrement())
  userId     Int
  wishcardId Int
  message    String    @db.VarChar
  createdAt  DateTime  @default(now()) @db.Timestamp(6)
  updatedAt  DateTime  @default(now()) @db.Timestamp(6)
  deletedAt  DateTime? @db.Timestamp(6)
  user       user      @relation(fields: [userId], references: [id])
  wishcard   wishcard  @relation(fields: [wishcardId], references: [id])

  @@index([userId], name: "message_userId_idx")
  @@index([wishcardId], name: "message_wishcardId_idx")
}

model user {
  id                                Int            @id @default(autoincrement())
  firstName                         String         @db.VarChar
  lastName                          String         @db.VarChar
  email                             String         @unique @db.VarChar
  uid                               String         @unique @db.VarChar
  role                              roles          @default(DONOR)
  createdAt                         DateTime       @default(now()) @db.Timestamp(6)
  updatedAt                         DateTime       @default(now()) @db.Timestamp(6)
  deletedAt                         DateTime?      @db.Timestamp(6)
  agency                            agency[]
  agencyMember                      agencyMember[]
  donation                          donation[]
  message                           message[]
  wishcard_userTowishcard_createdBy wishcard[]     @relation("userTowishcard_createdBy")

  @@index([email], name: "user_email_idx")
  @@index([uid], name: "user_uid_idx")
}

model wishcard {
  id                            Int             @id @default(autoincrement())
  itemPrice                     Float
  itemUrl                       String          @db.VarChar
  entityId                      Int
  agencyId                      Int
  createdBy                     Int
  addressId                     Int
  status                        wishcard_status @default(DRAFT)
  createdAt                     DateTime        @default(now()) @db.Timestamp(6)
  updatedAt                     DateTime        @default(now()) @db.Timestamp(6)
  deletedAt                     DateTime?       @db.Timestamp(6)
  address                       address         @relation(fields: [addressId], references: [id])
  agency                        agency          @relation(fields: [agencyId], references: [id])
  user_userTowishcard_createdBy user            @relation("userTowishcard_createdBy", fields: [createdBy], references: [id])
  child                         child           @relation(fields: [entityId], references: [id])
  animal                        animal          @relation(fields: [entityId], references: [id])
  donation                      donation[]
  images                        images[]
  message                       message[]

  @@index([agencyId], name: "wishcard_agencyId_idx")
  @@index([createdBy], name: "wishcard_createdBy_idx")
  @@index([status], name: "wishcard_status_idx")
}

enum agency_roles {
  OWNER
  MEMBER
}

enum animal_type {
  DOG
  CAT
  OTHER
}

enum donation_status {
  DONATED
  SHIPPED
  ARRIVED
}

enum gender {
  MALE
  FEMALE
  OTHER
}

enum roles {
  GUEST
  DONOR
  AGENCY
  ADMIN
}

enum wishcard_status {
  DRAFT
  PUBLISHED
  DONATED
}
